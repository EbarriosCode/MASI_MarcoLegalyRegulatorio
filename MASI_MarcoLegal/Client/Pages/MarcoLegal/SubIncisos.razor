@page "/SubIncisos"
@inject HttpClient httpClient
@attribute [Authorize(Roles = "Administrador,Supervisor")]

@if (SubIncisosAPI == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Incisos</h5>
            <AuthorizeView Roles="Administrador,Supervisor">
                <div class="form-group">
                    <button type="button" class="btn btn-light px-5" @onclick="ShowingForm"><i class="zmdi zmdi-file-add"></i> Agregar</button>
                </div>
            </AuthorizeView>
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Descripción</th>
                            <th scope="col">Detalle</th>
                            <th scope="col">Artículo</th>
                            <th scope="col">Verificable</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in SubIncisosAPI)
                        {
                            <tr>
                                <td scope="row">@item.SubIncisoID</td>
                                <td>@item.Descripcion</td>
                                <td>@item.Detalle</td>
                                <td>@item.Inciso.Descripcion</td>
                                <td>@item.Verificable</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <h5 class="@textClass">@MessageCreate</h5>

    @if (this.ShowForm)
    {
        <SubIncisosForm ButtonText="Crear SubInciso" SubInciso="SubInciso" OnValidSubmit="CreateSubInciso" Title="Crear SubInciso" />
    }
}


@code {
    private SubIncisoViewModel SubInciso = new SubIncisoViewModel();
    private List<SubIncisoViewModel> SubIncisosAPI { get; set; }
    private bool ShowForm;
    private string MessageCreate;
    private string textClass;

    protected override async Task OnInitializedAsync()
    {
        await GetSubIncisosAsync();
    }

    private async Task GetSubIncisosAsync()
    {
        this.SubIncisosAPI = await httpClient.GetFromJsonAsync<List<SubIncisoViewModel>>("api/MarcoLegal/GetSubIncisos");
    }


    private void ShowingForm()
    {
        this.ShowForm = true;
    }

    private async Task CreateSubInciso()
    {
        var result = await httpClient.PostAsJsonAsync("api/MarcoLegal/CreateSubInciso", this.SubInciso);

        if (result.StatusCode == System.Net.HttpStatusCode.OK)
        {
            //var content = result.Content.ReadFromJsonAsync<UserToken>();
            this.textClass = "text-center text-success";
            this.MessageCreate = "Registro creado con éxito";
            this.ShowForm = false;

            await OnInitializedAsync();

            this.SubInciso.Descripcion = string.Empty;
            this.SubInciso.Detalle = string.Empty;
            this.SubInciso.IncisoID = 0;
            this.SubInciso.Verificable = false;
        }
        else
        {
            this.textClass = "text-center text-warning";
            this.MessageCreate = "Error al crear registro";
        }
    }
}

