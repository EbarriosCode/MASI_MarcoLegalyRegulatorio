// <auto-generated />
using System;
using MASI_MarcoLegal.Server.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MASI_MarcoLegal.Server.Migrations
{
    [DbContext(typeof(MASIContext))]
    [Migration("20200910222225_Modelo_Verificacion_Y_Cumplimientos")]
    partial class Modelo_Verificacion_Y_Cumplimientos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Articulos", b =>
                {
                    b.Property<int>("ArticuloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapituloID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verificable")
                        .HasColumnType("bit");

                    b.HasKey("ArticuloID");

                    b.HasIndex("CapituloID");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Capitulos", b =>
                {
                    b.Property<int>("CapituloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TituloID")
                        .HasColumnType("int");

                    b.HasKey("CapituloID");

                    b.HasIndex("TituloID");

                    b.ToTable("Capitulos");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Considerandos", b =>
                {
                    b.Property<int>("ConsideranoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeyID")
                        .HasColumnType("int");

                    b.HasKey("ConsideranoID");

                    b.HasIndex("LeyID");

                    b.ToTable("Considerandos");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.CumplimientoArticulo", b =>
                {
                    b.Property<int>("CumplimientoArticuloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<bool>("Cumple")
                        .HasColumnType("bit");

                    b.Property<string>("Evidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VerificacionID")
                        .HasColumnType("int");

                    b.HasKey("CumplimientoArticuloID");

                    b.HasIndex("ArticuloID");

                    b.HasIndex("VerificacionID");

                    b.ToTable("CumplimientoArticulo");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.CumplimientoInciso", b =>
                {
                    b.Property<int>("CumplimientoIncisoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cumple")
                        .HasColumnType("bit");

                    b.Property<string>("Evidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IncisoID")
                        .HasColumnType("int");

                    b.Property<int?>("VerificacionID")
                        .HasColumnType("int");

                    b.HasKey("CumplimientoIncisoID");

                    b.HasIndex("IncisoID");

                    b.HasIndex("VerificacionID");

                    b.ToTable("CumplimientoInciso");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.CumplimientoSubInciso", b =>
                {
                    b.Property<int>("CumplimientoIncisoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cumple")
                        .HasColumnType("bit");

                    b.Property<string>("Evidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubIncisoID")
                        .HasColumnType("int");

                    b.Property<int?>("VerificacionID")
                        .HasColumnType("int");

                    b.HasKey("CumplimientoIncisoID");

                    b.HasIndex("SubIncisoID");

                    b.HasIndex("VerificacionID");

                    b.ToTable("CumplimientoSubInciso");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Incisos", b =>
                {
                    b.Property<int>("IncisoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verificable")
                        .HasColumnType("bit");

                    b.HasKey("IncisoID");

                    b.HasIndex("ArticuloID");

                    b.ToTable("Incisos");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Leyes", b =>
                {
                    b.Property<int>("LeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeyID");

                    b.ToTable("Leyes");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Organizacion", b =>
                {
                    b.Property<int>("OrganizacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizacionID");

                    b.ToTable("Organizaciones");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.SubIncisos", b =>
                {
                    b.Property<int>("SubIncisoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IncisoID")
                        .HasColumnType("int");

                    b.Property<bool>("Verificable")
                        .HasColumnType("bit");

                    b.HasKey("SubIncisoID");

                    b.HasIndex("IncisoID");

                    b.ToTable("SubIncisos");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Titulos", b =>
                {
                    b.Property<int>("TituloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeyID")
                        .HasColumnType("int");

                    b.HasKey("TituloID");

                    b.HasIndex("LeyID");

                    b.ToTable("Titulos");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Verificacion", b =>
                {
                    b.Property<int>("VerificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeyID")
                        .HasColumnType("int");

                    b.Property<int>("OrganizacionID")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VerificacionID");

                    b.HasIndex("LeyID");

                    b.HasIndex("OrganizacionID");

                    b.ToTable("Verificacion");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Articulos", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.Capitulos", "Capitulo")
                        .WithMany("Articulos")
                        .HasForeignKey("CapituloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Capitulos", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.Titulos", "Titulo")
                        .WithMany("Capitulos")
                        .HasForeignKey("TituloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Considerandos", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.Leyes", "Ley")
                        .WithMany("Considerandos")
                        .HasForeignKey("LeyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.CumplimientoArticulo", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.Articulos", "Articulo")
                        .WithMany("CumplimientoArticulos")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASI_MarcoLegal.Server.Models.Verificacion", "Verificacion")
                        .WithMany()
                        .HasForeignKey("VerificacionID");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.CumplimientoInciso", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.Incisos", "Inciso")
                        .WithMany("CumplimientoIncisos")
                        .HasForeignKey("IncisoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASI_MarcoLegal.Server.Models.Verificacion", "Verificacion")
                        .WithMany()
                        .HasForeignKey("VerificacionID");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.CumplimientoSubInciso", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.SubIncisos", "SubInciso")
                        .WithMany("CumplimientoSubIncisos")
                        .HasForeignKey("SubIncisoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASI_MarcoLegal.Server.Models.Verificacion", "Verificacion")
                        .WithMany()
                        .HasForeignKey("VerificacionID");
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Incisos", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.Articulos", "Articulo")
                        .WithMany("Incisos")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.SubIncisos", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.Incisos", "Inciso")
                        .WithMany("SubIncisos")
                        .HasForeignKey("IncisoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Titulos", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.Leyes", "Ley")
                        .WithMany("Titulos")
                        .HasForeignKey("LeyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASI_MarcoLegal.Server.Models.Verificacion", b =>
                {
                    b.HasOne("MASI_MarcoLegal.Server.Models.Leyes", "Ley")
                        .WithMany("Verificaciones")
                        .HasForeignKey("LeyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASI_MarcoLegal.Server.Models.Organizacion", "Organizacion")
                        .WithMany("Verificaciones")
                        .HasForeignKey("OrganizacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
